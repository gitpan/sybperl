	     @(#)README-2b3	1.2	9/21/95
	
This is patch 3 to Sybperl 2b0.

IMPORTANT BUG NOTIFICATION

      I have discovered what I think is a bug in Perl 5.001m
      which shows up when logically testing an array where all the
      elements are 'undef'. This bug can show up when you retrieve
      rows using dbsqlexec() or ct_fetch() using a while loop: if you
      retrieve a row where all the column values are NULL then the
      while loop exits. The short-term workaround (which I admit is
      pretty crude) consist in adding an additional non-null element
      to the results array when all the column values are NULL. This
      workaround is enabled by defining UNDEF_BUG (which is enabled by
      default in the CONFIG file).
      This bug does NOT show up if you retrieve the columns using
      associative arrays instead of normal arrays.

Changes to CONFIG

      Added an EXTRA_LIBS field, and an EXTRA_DEFS field, to allow the
      specification of site or OS specific libraries and flags.
      
Changes to Sybase::DBlib

      The dbmsghandle() and dberrhandle() calls now return the
      previously set handler (undef if none was previously
      set). Passing undef as the handler name will unset the handler.

Changes to Sybase::CTlib

      Added the ct_param() and ct_cursor() calls and made some smallish
      bug fixes. I would say that Sybase::CTlib is quite usable as it
      currently stands.
      Added a ct_fetchable() routine, which returns TRUE when the
      current result set has fetchable rows.

Other changes

      Started work on an FAQ.
      Bugs can now be submitted directly into my (home grown) bug
      tracking system (see the SPR file).
      Added several example scripts (see the eg/ directory)
      Added a static.test script, for use when static linking is
      required ('make test' still doesn't work in that situation).

      I have create a mailing list (sybperl-list@itf.ch). To
      subscribe, send a message with the word 'subscribe' in the body
      to sybperl-list-request@itf.ch. Note that I reserve the right to
      discontinue this service if the volume becomes too large.
